version: '3'

services:

    app:
        build: .
        container_name: micro-videos-app
        entrypoint: dockerize -template ./backend/.env.example:.env -template ./backend/.env.testing.example:.env.testing -wait tcp://db:3306 -timeout 40s ./.docker/entrypoint.sh
        environment:
            - _DB_HOST=db
            - _DB_DATABASE=code_micro_videos
            - _TEST_DB_DATABASE=code_micro_videos_test
            - _DB_USERNAME=root
            - _DB_PASSWORD=root
            - GOOGLE_CLOUD_PROJECT_ID=${GOOGLE_CLOUD_PROJECT_ID}
            - GOOGLE_CLOUD_KEY_FILE=${GOOGLE_CLOUD_KEY_FILE}
            - GOOGLE_CLOUD_STORAGE_BUCKET=${GOOGLE_CLOUD_STORAGE_BUCKET}
            - GOOGLE_CLOUD_STORAGE_API_URI=${GOOGLE_CLOUD_STORAGE_API_URI}
            - TESTING_PROD=${TESTING_PROD}
        ports:
            - "3000:3000"
        volumes:
            - .:/var/www
        networks:
            - app-network
        depends_on:
            - db
            - redis

    nginx:
        build: .docker/nginx
        container_name: micro-videos-nginx
        restart: always
        tty: true
        ports:
            - "8000:80"
        volumes:
            - .:/var/www
        networks:
            - app-network
        depends_on:
            - app

    db:
        build: ./.docker/mysql
        container_name: micro-videos-db
        restart: always
        tty: true
        ports:
            - "3306:3306"
        volumes:
            - ./.docker/dbdata:/var/lib/mysql
            - ./.docker/mysql/script_init:/docker-entrypoint-initdb.d
        environment:
            - MYSQL_ROOT_PASSWORD=root
            - MYSQL_USER=root
        networks:
            - app-network

    redis:
        image: redis:alpine
        container_name: micro-videos-redis
        expose:
            - 6379
        networks:
            - app-network

networks:
    app-network:
        driver: bridge
